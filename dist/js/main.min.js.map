{"version":3,"file":"main.min.js","sources":["main.js"],"sourcesContent":["\nvar viewportEls = document.querySelectorAll('.viewport');\n\nif (viewportEls.length > 0) {\n\n    var observer = new IntersectionObserver(function (entries) {\n        // isIntersecting is true when element and viewport are overlapping\n        // isIntersecting is false when element and viewport don't overlap\n\n        entries.forEach(function (entry) {\n            entry.target.classList.toggle('is-in-viewport', entry.isIntersecting);\n        });\n        \n    }, { threshold: [0] }); // rootMargin: half ? '0px 0px -50% 0px' : '0px'\n\n    viewportEls.forEach(function (el) {\n        observer.observe(el);\n    });\n\n};\ndocument.querySelectorAll('[data-target]').forEach(trigger => {\n    trigger.addEventListener('click', function () {\n        const selectors = this.getAttribute('data-target').split(',').map(s => s.trim());\n        const className = this.getAttribute('data-class') || 'open';\n        selectors.forEach(selector => {\n            document.querySelectorAll(selector).forEach(targetEl => {\n                targetEl.classList.toggle(className);\n            });\n        });\n    });\n});\n\ndocument.querySelectorAll('[data-scroll]').forEach(trigger => {\n  trigger.addEventListener('click', function() {\n    const selectors = this.getAttribute('data-scroll').split(',').map(s => s.trim());\n    selectors.forEach(selector => {\n      document.querySelectorAll(selector).forEach(targetEl => {\n\n        const rootStyles = getComputedStyle(document.documentElement);\n        const offsetPx = rootStyles.getPropertyValue('--scroll-offset').trim();\n        let offset = 0;\n        if (offsetPx) { offset = parseInt(offsetPx.replace('px', ''), 10) || 0; };\n        const y = targetEl.getBoundingClientRect().top + window.pageYOffset - offset;\n\n        window.scrollTo({ top: y, behavior: 'smooth' });\n      });\n    });\n  });\n});"],"names":["observer","viewportEls","document","querySelectorAll","length","IntersectionObserver","entries","forEach","entry","target","classList","toggle","isIntersecting","threshold","el","observe","trigger","addEventListener","selectors","this","getAttribute","split","map","s","trim","className","selector","targetEl","rootStyles","getComputedStyle","documentElement","offsetPx","getPropertyValue","let","offset","parseInt","replace","y","getBoundingClientRect","top","window","pageYOffset","scrollTo","behavior"],"mappings":"AACA,IAIQA,SAJJC,YAAcC,SAASC,iBAAiB,aAEnB,EAArBF,YAAYG,SAERJ,SAAW,IAAIK,qBAAqB,SAAUC,GAI9CA,EAAQC,QAAQ,SAAUC,GACtBA,EAAMC,OAAOC,UAAUC,OAAO,iBAAkBH,EAAMI,mBAG3D,CAAEC,UAAW,CAAC,KAEjBZ,YAAYM,QAAQ,SAAUO,GAC1Bd,SAASe,QAAQD,MAIzBZ,SAASC,iBAAiB,iBAAiBI,QAAQS,IAC/CA,EAAQC,iBAAiB,QAAS,WAC9B,MAAMC,EAAYC,KAAKC,aAAa,eAAeC,MAAM,KAAKC,IAAIC,GAAKA,EAAEC,QACnEC,EAAYN,KAAKC,aAAa,eAAiB,OACrDF,EAAUX,QAAQmB,IACdxB,SAASC,iBAAiBuB,GAAUnB,QAAQoB,IACxCA,EAASjB,UAAUC,OAAOc,WAM1CvB,SAASC,iBAAiB,iBAAiBI,QAAQS,IACjDA,EAAQC,iBAAiB,QAAS,WAChC,MAAMC,EAAYC,KAAKC,aAAa,eAAeC,MAAM,KAAKC,IAAIC,GAAKA,EAAEC,QACzEN,EAAUX,QAAQmB,IAChBxB,SAASC,iBAAiBuB,GAAUnB,QAAQoB,IAE1C,MAAMC,EAAaC,iBAAiB3B,SAAS4B,iBACvCC,EAAWH,EAAWI,iBAAiB,mBAAmBR,OAChES,IAAIC,EAAS,EACTH,IAAYG,EAASC,SAASJ,EAASK,QAAQ,KAAM,IAAK,KAAO,GAC/DC,EAAIV,EAASW,wBAAwBC,IAAMC,OAAOC,YAAcP,EAEtEM,OAAOE,SAAS,CAAEH,IAAKF,EAAGM,SAAU"}