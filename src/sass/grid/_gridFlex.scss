/**
 * grid/_gridFlex.scss Grid Flex
 *
 * Write a description
 */

/*
 * INDEX
 * - flex item
 * - flex wrap
 * - flex alignments
 * - flex col
 * - flex gutter
 * - flex offset
 */

/**
 * flex item
 */

.flex {
  display: flex;
  flex-flow: row wrap; /* flex-direction: row; + flex-wrap: wrap; */
  
  @for $i from 0 through 12 {
    .item.item-#{$i} {
      flex-grow: #{$i};
      flex-basis: 0;
    }
  }

  @include responsive("xbig") {
    @for $i from 0 through 12 {
      .item.item-xb-#{$i} {
        flex-grow: #{$i};
        flex-basis: 0;
      }
    }
  }
  @include responsive("large") {
    @for $i from 0 through 12 {
      .item.item-l-#{$i} {
        flex-grow: #{$i};
        flex-basis: 0;
      }
    }
  }
  @include responsive("medium") {
    @for $i from 0 through 12 {
      .item.item-m-#{$i} {
        flex-grow: #{$i};
        flex-basis: 0;
      }
    }
  }
  @include responsive("small") {
    @for $i from 0 through 12 {
      .item.item-s-#{$i} {
        flex-grow: #{$i};
        flex-basis: 0;
      }
    }
  }
}

/**
 * flex wrap
 */

.flex.nowrap {
  flex-wrap: nowrap;
}

/**
 * flex alignments
 */

.flex.top {
  align-items: flex-start;
}
@include responsive ('xbig'){
  .flex.top, .flex.xb\:top{align-items: flex-start;}
}
@include responsive ('large'){
  .flex.top, .flex.l\:top{align-items: flex-start;}
}
@include responsive ('medium'){
  .flex.top, .flex.m\:top{align-items: flex-start;}
}
@include responsive ('small'){
  .flex.top, .flex.s\:top{align-items: flex-start;}
}

.flex.middle {
  align-items: center;
}
@include responsive ('xbig'){
  .flex.middle, .flex.xb\:middle{align-items: center;}
}
@include responsive ('large'){
  .flex.middle, .flex.l\:middle{align-items: center;}
}
@include responsive ('medium'){
  .flex.middle, .flex.m\:middle{align-items: center;}
}
@include responsive ('small'){
  .flex.middle, .flex.s\:middle{align-items: center;}
}

.flex.bottom {
  align-items: flex-end;
}
@include responsive ('xbig'){
  .flex.bottom, .flex.xb\:bottom{align-items: flex-end;}
}
@include responsive ('large'){
  .flex.bottom, .flex.l\:bottom{align-items: flex-end;}
}
@include responsive ('medium'){
  .flex.bottom, .flex.m\:bottom{align-items: flex-end;}
}
@include responsive ('small'){
  .flex.bottom, .flex.s\:bottom{align-items: flex-end;}
}

.flex.stretch {
  align-items: stretch;
}
@include responsive ('xbig'){
  .flex.stretch, .flex.xb\:stretch{align-items: stretch;}
}
@include responsive ('large'){
  .flex.stretch, .flex.l\:stretch{align-items: stretch;}
}
@include responsive ('medium'){
  .flex.stretch, .flex.m\:stretch{align-items: stretch;}
}
@include responsive ('small'){
  .flex.stretch, .flex.s\:stretch{align-items: stretch;}
}

.flex.left {
  justify-content: flex-start;
}
@include responsive ('xbig'){
  .flex.left, .flex.xb\:left{justify-content: flex-start;}
}
@include responsive ('large'){
  .flex.left, .flex.l\:left{justify-content: flex-start;}
}
@include responsive ('medium'){
  .flex.left, .flex.m\:left{justify-content: flex-start;}
}
@include responsive ('small'){
  .flex.left, .flex.s\:left{justify-content: flex-start;}
}

.flex.center {
  justify-content: center;
}
@include responsive ('xbig'){
  .flex.center, .flex.xb\:center{justify-content: center;}
}
@include responsive ('large'){
  .flex.center, .flex.l\:center{justify-content: center;}
}
@include responsive ('medium'){
  .flex.center, .flex.m\:center{justify-content: center;}
}
@include responsive ('small'){
  .flex.center, .flex.s\:center{justify-content: center;}
}

.flex.right {
  justify-content: flex-end;
}
@include responsive ('xbig'){
  .flex.right, .flex.xb\:right{justify-content: flex-end;}
}
@include responsive ('large'){
  .flex.right, .flex.l\:right{justify-content: flex-end;}
}
@include responsive ('medium'){
  .flex.right, .flex.m\:right{justify-content: flex-end;}
}
@include responsive ('small'){
  .flex.right, .flex.s\:right{justify-content: flex-end;}
}

.flex.justify {
  justify-content: space-between;
}
@include responsive ('xbig'){
  .flex.justify, .flex.xb\:justify{justify-content: space-between;}
}
@include responsive ('large'){
  .flex.justify, .flex.l\:justify{justify-content: space-between;}
}
@include responsive ('medium'){
  .flex.justify, .flex.m\:justify{justify-content: space-between;}
}
@include responsive ('small'){
  .flex.justify, .flex.s\:justify{justify-content: space-between;}
}

.flex.space {
  justify-content: space-around;
}
@include responsive ('xbig'){
  .flex.space, .flex.xb\:space{justify-content: space-around;}
}
@include responsive ('large'){
  .flex.space, .flex.l\:space{justify-content: space-around;}
}
@include responsive ('medium'){
  .flex.space, .flex.m\:space{justify-content: space-around;}
}
@include responsive ('small'){
  .flex.space, .flex.s\:space{justify-content: space-around;}
}

/**
 * flex col
 */

$gutter: 20px; // Define columns gutter

.flex {
  .col {
    min-height: 1px;
  }

  @for $i from 0 through 12 {
    $width: 100% / 12 * $i;

    .col-#{$i} {
      flex: 0 0 $width;
      @if $i == 12 {
        padding-left: 0px;
        padding-right: 0px;
      } @else {
        padding-left: $gutter / 2;
        padding-right: $gutter / 2;
      }

      &:first-of-type {
        padding-left: 0px;
      }
      &:last-of-type {
        padding-right: 0px;
      }
    }
  }

  @include responsive("xbig") {
    @for $i from 0 through 12 {
      $width: 100% / 12 * $i;

      .col-xb-#{$i},
      .xb\:col-#{$i} {
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else {
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }

        &:first-of-type {
          padding-left: 0px;
        }
        &:last-of-type {
          padding-right: 0px;
        }
      }
    }
  }

  @include responsive("large") {
    @for $i from 0 through 12 {
      $width: 100% / 12 * $i;

      .col-l-#{$i},
      .lg\:col-#{$i} {
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else {
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }

        &:first-of-type {
          padding-left: 0px;
        }
        &:last-of-type {
          padding-right: 0px;
        }
      }
    }
  }

  @include responsive("medium") {
    @for $i from 0 through 12 {
      $width: 100% / 12 * $i;

      .col-m-#{$i},
      .md\:col-#{$i} {
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else {
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }

        &:first-of-type {
          padding-left: 0px;
        }
        &:last-of-type {
          padding-right: 0px;
        }
      }
    }
  }

  @include responsive("small") {
    @for $i from 0 through 12 {
      $width: 100% / 12 * $i;

      .col-s-#{$i},
      .sm\:col-#{$i}{
        flex: 0 0 $width;
        @if $i == 12 {
          padding-left: 0px;
          padding-right: 0px;
        } @else {
          padding-left: $gutter / 2;
          padding-right: $gutter / 2;
        }

        &:first-of-type {
          padding-left: 0px;
        }
        &:last-of-type {
          padding-right: 0px;
        }
      }
    }
  }
}

/**
 * flex gutter
 * Fix left responsive gutter
 */

.flex {
  .gutter-0 {
    padding-left: 0px;
  }
  @include responsive("xbig") {
    .gutter-xb-0 {
      padding-left: 0px;
    }
  }
  @include responsive("large") {
    .gutter-l-0 {
      padding-left: 0px;
    }
  }
  @include responsive("medium") {
    .gutter-m-0 {
      padding-left: 0px;
    }
  }
  @include responsive("small") {
    .gutter-s-0 {
      padding-left: 0px;
    }
  }
}

/**
 * flex offset
 */

.flex {
  @for $i from 0 through 12 {
    $marginLeft: 100% / 12 * $i;

    .offset-#{$i} {
      margin-left: $marginLeft;

      //&:first-of-type{padding-left: 0px;}
      //&:last-of-type{padding-right: 0px;}
    }
  }

  @include responsive("xbig") {
    @for $i from 0 through 12 {
      $marginLeft: 100% / 12 * $i;

      .offset-xb-#{$i},
      .xb\:offset-#{$i} {
        margin-left: $marginLeft;

        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("large") {
    @for $i from 0 through 12 {
      $marginLeft: 100% / 12 * $i;

      .offset-l-#{$i},
      .lg\:offset-#{$i} {
        margin-left: $marginLeft;

        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("medium") {
    @for $i from 0 through 12 {
      $marginLeft: 100% / 12 * $i;

      .offset-m-#{$i},
      .md\:offset-#{$i} {
        margin-left: $marginLeft;

        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }

  @include responsive("small") {
    @for $i from 0 through 12 {
      $marginLeft: 100% / 12 * $i;

      .offset-s-#{$i},
      .sm\:offset-#{$i}{
        margin-left: $marginLeft;

        //&:first-of-type{padding-left: 0px;}
        //&:last-of-type{padding-right: 0px;}
      }
    }
  }
}

/**
 * flex col xN
 */

@for $i from 1 through 6 {
  $width: 100% / $i;

  .col-x#{$i} {
    flex: 0 0 $width;
  }
}

@include responsive("xbig") {
  @for $i from 1 through 6 {
    $width: 100% / $i;
  
    .col-xb-x#{$i},
    .xb\:col-x{
      flex: 0 0 $width;
    }
  }
}
@include responsive("large") {
  @for $i from 1 through 6 {
    $width: 100% / $i;
  
    .col-l-x#{$i},
    .lg\:col-x#{$i} {
      flex: 0 0 $width;
    }
  }
}
@include responsive("medium") {
  @for $i from 1 through 6 {
    $width: 100% / $i;
  
    .col-m-x#{$i},
    .md\:col-x {
      flex: 0 0 $width;
    }
  }
}
@include responsive("small") {
  @for $i from 1 through 6 {
    $width: 100% / $i;
  
    .col-s-x#{$i},
    .sm\:col-x {
      flex: 0 0 $width;
    }
  }
}
